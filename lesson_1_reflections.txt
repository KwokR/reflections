How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The CLI directly compared similar sections so it was easier to spot changes 
    between the two versions


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would have saved me a lot of time making sure that 
    all my code was saved by a certain naming convention. Having a history of my 
    code would be a good way to start refactoring older code to make it more efficient.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual commits allows the user to choose a logical timepoint to save. 
    The user has control over what is committed. If the user does not follow proper 
    commit conventions the history log may have too many version if they commit too 
    often, or the DIFF may be unreadable if they don't commit enough.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Perhaps GIT was designed for the purpose of allowing users to create a repository 
    (project) that will have multiple file interconnected to each other. Users of google 
    applications are typically used separately.`

How can you use the commands git log and git diff to view the history of files?

    git log will display the different commited versions in my repository 
    (colleciton of files). git diff will allow me to compare the files within the repository 
    by comparing the commit ID. To see where the changes occured in a version, the version you
    see the change is the 2nd ID and the verison pior will be the first ID in the DIFF command

    git diff "first version", "updated version"

How might using version control make you more confident to make changes that
could break something?

    The ability go go back and test different versions allows me to pin point which
    version introduced the bug and see where the changes were using git diff

Now that you have your workspace set up, what do you want to try using Git for?

    Gain an understanding of version control and how as a programmer I will be able to 
    capitalize on its usage when writing and experimenting with code architecture